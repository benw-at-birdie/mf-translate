cubes:
- dimensions:
  - name: order_id
    primary_key: true
    public: false
    sql: '{CUBE}.order_id'
  - name: location_id
    public: false
    sql: '{CUBE}.location_id'
  - name: customer_id
    public: false
    sql: '{CUBE}.customer_id'
  - name: ordered_at
    sql: '{CUBE}.ordered_at'
    type: time
  - name: ordered_at_test
    sql: '{CUBE}.ordered_at'
    type: time
  - name: discount_code
    sql: '{CUBE}.discount_code'
    type: string
  - name: order_total_dim
    sql: '{CUBE}.order_total'
    type: string
  - name: is_food_order
    sql: '{CUBE}.is_food_order'
    type: string
  - name: is_drink_order
    sql: '{CUBE}.is_drink_order'
    type: string
  - name: is_large_order
    sql: ({CUBE}.order_total > 20)
    type: string
  measures:
  - description: Distict count of customers placing orders
    name: customers_with_orders
    sql: '{CUBE}.customer_id'
    title: Customers w/ Orders
    type: count_distinct
  - description: Unique count of new customers.
    filters:
    - sql: '{customers.customer_type}  = ''new'''
    name: new_customer
    sql: '{CUBE}.customer_id'
    title: New Customers
    type: count_distinct
  - description: Sum of total order amonunt. Includes tax + revenue.
    name: order_total
    sql: '{CUBE}.order_total'
    title: Order Total
    type: sum
  - description: Count of orders.
    name: orders
    sql: '1'
    title: Orders
    type: sum
  - description: Example metric colaescing null to zero.
    name: orders_fill_nulls_with_zero
    sql: '1'
    title: Orders (Fill nulls with 0)
    type: sum
  - description: Count of orders that contain food order items
    filters:
    - sql: '{is_food_order} = true'
    name: food_orders
    sql: '1'
    title: Food Orders
    type: sum
  - description: Count of orders with order total over 20.
    filters:
    - sql: '{is_large_order} = true'
    name: large_orders
    sql: '1'
    title: Large Orders
    type: sum
  - filters:
    - sql: '{is_drink_order} = true'
    - sql: '{customers.customer_type} = ''returning'''
    name: pc_drink_orders_for_returning_customers_numerator
    public: false
    sql: '1'
    type: sum
  - filters:
    - sql: '{customers.customer_type} = ''returning'''
    name: pc_drink_orders_for_returning_customers_denominator
    public: false
    sql: '1'
    type: sum
  - description: Percentage of orders which are drink orders.
    name: pc_drink_orders_for_returning_customers
    sql: '{pc_drink_orders_for_returning_customers_numerator} / nullif({pc_drink_orders_for_returning_customers_denominator},
      0)'
    title: Drink orders for returning customers (%)
    type: number
  - description: Sum of cost for each order item.
    name: order_cost
    sql: '{CUBE}.order_cost'
    title: Order Cost
    type: sum
  name: orders_base
  sql_table: '`fresh-iridium-428713-j5`.`jaffle_shop`.`orders`'
